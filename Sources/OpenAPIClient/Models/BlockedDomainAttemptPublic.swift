//
// BlockedDomainAttemptPublic.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct BlockedDomainAttemptPublic: Sendable, Codable, JSONEncodable, Hashable {

    public var deviceName: String?
    public var domainName: String
    public var id: UUID
    public var label: String?
    public var timestamp: Date?
    public var userId: UUID

    public init(deviceName: String? = nil, domainName: String, id: UUID, label: String? = nil, timestamp: Date? = nil, userId: UUID) {
        self.deviceName = deviceName
        self.domainName = domainName
        self.id = id
        self.label = label
        self.timestamp = timestamp
        self.userId = userId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case deviceName = "device_name"
        case domainName = "domain_name"
        case id
        case label
        case timestamp
        case userId = "user_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(deviceName, forKey: .deviceName)
        try container.encode(domainName, forKey: .domainName)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(label, forKey: .label)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encode(userId, forKey: .userId)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension BlockedDomainAttemptPublic: Identifiable {}
