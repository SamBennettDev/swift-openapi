//
// DevicePublic.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DevicePublic: Codable, JSONEncodable, Hashable {

    public var name: String
    public var id: UUID
    public var ipAddress: String
    public var privateKey: String
    public var publicKey: String
    public var userId: UUID

    public init(name: String, id: UUID, ipAddress: String, privateKey: String, publicKey: String, userId: UUID) {
        self.name = name
        self.id = id
        self.ipAddress = ipAddress
        self.privateKey = privateKey
        self.publicKey = publicKey
        self.userId = userId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case id
        case ipAddress = "ip_address"
        case privateKey = "private_key"
        case publicKey = "public_key"
        case userId = "user_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(id, forKey: .id)
        try container.encode(ipAddress, forKey: .ipAddress)
        try container.encode(privateKey, forKey: .privateKey)
        try container.encode(publicKey, forKey: .publicKey)
        try container.encode(userId, forKey: .userId)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension DevicePublic: Identifiable {}
